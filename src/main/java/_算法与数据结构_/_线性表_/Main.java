package _算法与数据结构_._线性表_;

/**
 * @author HJC
 * @version 1.0
 * 谦谦君子 卑以自牧也
 * @date 2020/5/27  15:12
 * @description :
 */
public class Main {

    /*
    * 线性表
    *
    * 就如 队列
    * 每个 元素 只需要 记住 他的 头元素
    *
    * 具有 线一样的 性质
    *
    * 0个或者 多个 组成的 有限序列
    *
    *
    * */



    /*
    *
    *
    * 常用 的 数据结构
    *
    * 数组 字符串 （ 最基本的 数据 结构）
    *
    * 链表 线性表  查询 事件 慢 ， 对数据添加 删除所读 快
    *
    * 栈 先进后出 ， 后进 先出  只能对 栈顶元素 操作
    *
    * 队列 先进 先出 常用 广度优先搜索
    *
    * 双端队列 两端 进行 处理
    *
    * 树  树 递归 普通 平衡  完全 二叉搜索 四叉 多叉 红黑 自平衡 。。。。。等等
    * 树 遍历 前序 中序 后序
    *
    *
    * 高级 数据 结构
    *
    *
    *
    * 优先队列  每次取出 的是 优先级最高的 前K
    *  本质 可以 是一个 数组
    * 父节点 对应·下标 i-1 /2
    * 左侧 子节点 2*i + 1
    * 右侧 子节点 2*i + 2
    *
    *
    * 图  储存 矩阵 链表
    * 遍历 深度优先 广度优先
    *
    * 前缀树（字典树） 字典查找 比如 查找以ABC 开头的字典
    * 性质 ：  children 数组 或者 集合 每个分支 包含的 所有字符
    * isEnd 该节点是否某字符串的结尾
    * 根节点是空的
    * 除了根节点 其他节点 可能是单词结尾 ， 叶子节点 一定都是 单词的结尾
    *
    * 线性树
    *
    * 线段树 按照 二叉树 保存 数据 的形式 每个节点 都是 保存 的 数组里面某一段数据 之和
    *
    * 树状数组
    *
    *
    * */
}
